{"version":3,"sources":["img/img-pokemonlogo.png","components/Banner.jsx","redux/Ducks.js","components/CardResponse.jsx","components/Navbar.jsx","components/Detail.jsx","redux/store.js","App.jsx","index.js"],"names":["useStyles","makeStyles","bannercontainer","background","overflow","Banner","classes","Grid","container","spacing","direction","justify","alignItems","alignContent","wrap","className","Box","color","clone","src","logo","alt","style","width","initialState","open","data","loading","loadingSearch","page","CIRCULAR_PROGRESS","GET_RESPONSE_TRY","GET_RESPONSE_FINALLY","GET_RESPONSE_SEARCH_TRY","GET_RESPONSE_SEARCH_CATCH","GET_RESPONSE_SEARCH_FINALLY","getResponse","num","dispatch","getState","a","type","payload","pokemonData","viewMore","undefined","axios","get","response","results","console","log","theme","root","maxWidth","minWidth","margin","media","height","backgroundSize","backgroundColor","textcapitalize","textTransform","backdrop","zIndex","drawer","textalign","textAlign","createMuiTheme","palette","primary","amber","CardResponse","inputSearch","useDispatch","useSelector","store","useEffect","getResponseSearch","refresh","window","location","reload","map","element","index","item","xs","sm","md","lg","xl","Card","CardActionArea","CardMedia","image","title","name","CardContent","Typography","variant","component","gutterBottom","CardActions","to","ThemeProvider","Button","size","onClick","id","my","endIcon","Backdrop","CircularProgress","flexGrow","marginBottom","menuButton","marginRight","display","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Navbar","useState","setInputSearch","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","onKeyDown","event","keyCode","target","value","toLowerCase","BorderLinearProgress","withStyles","marginTop","colorPrimary","grey","bar","LinearProgress","cardshadowless","boxShadow","buttongroup","flexDirection","Detail","history","useHistory","useParams","detailById","setDetailById","setLoading","nextName","setNextName","previousName","setPreviousName","setOpen","getResponseById","nextPagById","parseInt","getNamePaginationNext","previousPagById","getNamePaginationPrevious","previousClick","push","fullWidth","startIcon","disabled","Chip","label","weight","types","length","el","abilities","ability","stats","stat","base_stat","rootReducer","combineReducers","state","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","App","createStore","applyMiddleware","thunk","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e94ab4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-pokemonlogo.380d8431.png\";","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport logo from \"../img/img-pokemonlogo.png\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    bannercontainer: {\r\n        background: '#313131',\r\n        overflow: 'hidden',\r\n    },\r\n});\r\n\r\nconst Banner = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n          className={classes.bannercontainer}  \r\n        >\r\n            <Box color=\"text.primary\" clone>\r\n                <img src={logo} alt=\"logo pokemon\" style={{width: '40%'}}/>\r\n            </Box>\r\n        </Grid> \r\n     );\r\n}\r\n \r\nexport default Banner;","import axios from 'axios';\r\n\r\nconst initialState = {\r\n    open: false,\r\n    data: [],\r\n    loading: false,\r\n    loadingSearch: false,\r\n    page: 20\r\n}\r\n\r\n//Types\r\n\r\nconst CIRCULAR_PROGRESS = 'CIRCULAR_PROGRESS'\r\n\r\nconst GET_RESPONSE_TRY ='GET_RESPONSE_TRY'\r\nconst GET_RESPONSE_FINALLY ='GET_RESPONSE_CACH'\r\n\r\nconst GET_RESPONSE_SEARCH_TRY ='GET_RESPONSE_SEARCH_TRY'\r\nconst GET_RESPONSE_SEARCH_CATCH ='GET_RESPONSE_SEARCH_CATCH'\r\nconst GET_RESPONSE_SEARCH_FINALLY ='GET_RESPONSE_SEARCH_FINALLY'\r\n\r\n//Reducer\r\n\r\nexport default function pokemonReducer(state = initialState, action){\r\n    switch (action.type) {\r\n        case CIRCULAR_PROGRESS:\r\n            return {...state, open: action.payload.open}\r\n\r\n        case GET_RESPONSE_TRY:\r\n            return {...state, page: action.payload.page, data: action.payload.data}\r\n        \r\n        case GET_RESPONSE_FINALLY:\r\n            return {...state, loading: action.payload.loading, loadingSearch: action.payload.loadingSearch, open: action.payload.open}\r\n\r\n        case GET_RESPONSE_SEARCH_TRY:\r\n            return {...state, data: action.payload.data}\r\n        \r\n        case GET_RESPONSE_SEARCH_CATCH:\r\n            return {...state, data: action.payload.data}\r\n\r\n        case GET_RESPONSE_SEARCH_FINALLY:\r\n            return {...state, loadingSearch: action.payload.loadingSearch, loading: action.payload.loading, open: action.payload.open}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\n\r\nexport const getResponse = (num) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CIRCULAR_PROGRESS,\r\n        payload: {\r\n            open: true,\r\n        }\r\n    })\r\n    \r\n    const page = getState().pokemonData.page;\r\n    let viewMore;\r\n    \r\n    if(num !== undefined){\r\n        viewMore = page + num\r\n    }else{\r\n        viewMore = page\r\n    }\r\n\r\n    try{\r\n             \r\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=${viewMore}`)\r\n\r\n        dispatch({\r\n            type: GET_RESPONSE_TRY,\r\n            payload: {\r\n                page: viewMore,\r\n                data: response.data.results\r\n            }\r\n        })    \r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n    finally{\r\n\r\n        dispatch({\r\n            type: GET_RESPONSE_FINALLY,\r\n            payload:{\r\n                loading: true,\r\n                loadingSearch: false,\r\n                open: false\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getResponseSearch = (inputSearch) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CIRCULAR_PROGRESS,\r\n        payload: {\r\n            open: true\r\n        }\r\n    })\r\n    \r\n    try{\r\n        \r\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${inputSearch}`)\r\n    \r\n        dispatch({\r\n            type: GET_RESPONSE_SEARCH_TRY,\r\n            payload: {\r\n                data: response.data\r\n            }\r\n        })\r\n\r\n    }\r\n    catch(error){\r\n\r\n        console.log(error);\r\n\r\n        dispatch({\r\n            type: GET_RESPONSE_SEARCH_CATCH,\r\n            payload: {\r\n                data: []\r\n            }\r\n        })\r\n    }\r\n    finally{\r\n\r\n        dispatch({\r\n            type: GET_RESPONSE_SEARCH_FINALLY,\r\n            payload:{\r\n                loadingSearch: true,\r\n                loading: false,\r\n                open: false\r\n            }\r\n        })\r\n    }\r\n}","import React,{ useEffect } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getResponse, getResponseSearch} from '../redux/Ducks';\r\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Grid, Card, CardActionArea, CardContent, CardMedia, Typography, Button,\r\nBox, CardActions, Backdrop, CircularProgress } from '@material-ui/core/';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport { amber } from '@material-ui/core/colors';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 300,\r\n        minWidth: 205,\r\n        margin: 'auto'\r\n    },\r\n    media: {\r\n        height: 205,\r\n        backgroundSize: 150,\r\n        backgroundColor: '#f2f2f2'\r\n    },\r\n    textcapitalize:{\r\n        textTransform: 'capitalize'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    textalign:{\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: amber\r\n    },\r\n  });\r\n\r\nconst CardResponse = (inputSearch) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const open = useSelector(store => store.pokemonData.open)\r\n\r\n    const page = useSelector(store => store.pokemonData.page)\r\n\r\n    const data = useSelector(store => store.pokemonData.data)\r\n\r\n    const loading = useSelector(store => store.pokemonData.loading)\r\n\r\n    const loadingSearch = useSelector(store => store.pokemonData.loadingSearch)\r\n\r\n    useEffect(() => {\r\n\r\n        if(inputSearch.inputSearch !== ''){\r\n            dispatch(getResponseSearch(inputSearch.inputSearch))\r\n        }else{\r\n            dispatch(getResponse())\r\n        }\r\n\r\n      }, [dispatch, page, inputSearch.inputSearch])\r\n\r\n    const nextPage = () =>{\r\n        dispatch(getResponse(20))\r\n    }\r\n\r\n    const refresh = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={1}>\r\n            {\r\n                loading === true && inputSearch.inputSearch === ''? data.map((element, index) =>( \r\n                    <Grid item xs={12} sm={4} md={3} lg={3} xl={2} key={index}>\r\n                        <Card className={classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`https://pokeres.bastionbot.org/images/pokemon/${ index + 1 }.png`}\r\n                                    title={element.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        N.º {index + 1}\r\n                                    </Typography>\r\n\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                        {element.name}\r\n                                    </Typography>\r\n                        \r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Typography>\r\n                                        <Link className=\"anchor\" to={`/react-pokemonapi/detail/${index + 1}`}>\r\n                                            GO TO\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </CardActions>\r\n\r\n                            </CardActionArea>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                ))\r\n                :\r\n                ''\r\n            }\r\n\r\n            {\r\n                loadingSearch === true ?\r\n                \r\n                    data.name === undefined  || data.name === null || data.name === ''?\r\n                    <>\r\n                    <Grid item xs={12} >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Not found\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.textalign}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                onClick={() =>{refresh()}}\r\n                            >\r\n                                GO BACK\r\n                            </Button>\r\n                        </ThemeProvider>\r\n                    </Grid> \r\n                    </>\r\n                    :\r\n                    <>\r\n                    <Grid item xs={12} sm={4} md={3} lg={3} xl={2} >\r\n                        <Card className={classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`}\r\n                                    title={data.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        N.º {data.id}\r\n                                    </Typography>\r\n\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                        {data.name}\r\n                                    </Typography>\r\n                        \r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Typography>\r\n                                        <Link className=\"anchor\" to={`/react-pokemonapi/detail/${data.id}`}>\r\n                                            GO TO\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </CardActions>\r\n\r\n                            </CardActionArea>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.textalign}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                onClick={() =>{refresh()}}\r\n                            >\r\n                                GO BACK\r\n                            </Button>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                    </>\r\n        \r\n                :''\r\n            }                \r\n        </Grid>\r\n\r\n        {\r\n            loading === true && loadingSearch === false?\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                <Box  my={6}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            endIcon={<Visibility />}\r\n                            onClick={()=>{nextPage()}}\r\n                        >\r\n                            SEE MORE\r\n                        </Button>\r\n                    </ThemeProvider>\r\n                </Box>\r\n            </Grid>\r\n            :\r\n            ''    \r\n        }          \r\n        <Backdrop className={classes.backdrop} open={open}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardResponse;","import React,{ useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardResponse from './CardResponse';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 48\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [inputSearch, setInputSearch] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    if (event.keyCode === 13) {\r\n      setInputSearch(event.target.value.toLowerCase())\r\n    }\r\n  }\r\n   \r\n  return (\r\n    <> \r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: '#ffc107' }}>\r\n          <Toolbar>\r\n        \r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Find pokemon by number or name\r\n            </Typography>\r\n\r\n            <div className={classes.search}>\r\n\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n\r\n              <InputBase\r\n                type=\"text\"\r\n                placeholder=\"Push enter to search\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onKeyDown={handleInputChange}  \r\n              />\r\n\r\n            </div>\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <CardResponse inputSearch={inputSearch}/>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, CardMedia, Typography, LinearProgress, Button, Backdrop, CircularProgress } from '@material-ui/core/';\r\nimport { makeStyles, withStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles/';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { amber } from '@material-ui/core/colors';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n      height: 10,\r\n      borderRadius: 5,\r\n      width: \"70%\",\r\n      marginTop: 11.2\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n      borderRadius: 5,\r\n      backgroundColor: '#1a90ff',\r\n    },\r\n  }))(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#302d31',\r\n        color: '#cecece'\r\n    },\r\n    media: {\r\n        height: 245,\r\n        backgroundSize: 240,\r\n        backgroundColor: '#696969'\r\n    },\r\n    cardshadowless:{\r\n        boxShadow: 'none'\r\n    },\r\n    textcapitalize: {\r\n        textTransform: 'capitalize'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    buttongroup:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    textalign:{\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: amber\r\n    },\r\n});\r\n\r\nconst Detail = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let history = useHistory();\r\n\r\n    const { id } = useParams()\r\n\r\n    const [detailById, setDetailById] = useState([])\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [nextName, setNextName] = useState('');\r\n\r\n    const [previousName, setPreviousName] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const getResponseById = async () => {\r\n            try {\r\n                setOpen(true)\r\n\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n                setDetailById(response.data)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }finally{\r\n                setLoading(true)\r\n                setOpen(false)\r\n            }\r\n        }\r\n        getResponseById()\r\n\r\n        const getNamePaginationNext = async () =>{\r\n\r\n            let nextPagById = parseInt(id) + 1\r\n\r\n            try {\r\n                setOpen(true)\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${nextPagById}`)\r\n                setNextName(response.data.name)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }finally{\r\n                setOpen(false)\r\n            }\r\n        }\r\n        getNamePaginationNext()\r\n\r\n        const getNamePaginationPrevious = async() =>{\r\n\r\n            let previousPagById = parseInt(id) - 1\r\n\r\n            if(previousPagById !== 0){\r\n\r\n                try {\r\n                    setOpen(true)\r\n                    const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${previousPagById}`)\r\n                    setPreviousName(response.data.name)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }finally{\r\n                    setOpen(false)\r\n                }\r\n            }\r\n        }\r\n        getNamePaginationPrevious()\r\n\r\n    }, [id])\r\n\r\n    const nextClick = () => {\r\n        history.push(`/react-pokemonapi/detail/${parseInt(id) + 1}`);\r\n    }\r\n\r\n    const previousClick = () => {\r\n        history.push(`/react-pokemonapi/detail/${parseInt(id) - 1}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n            {\r\n                loading === true ?\r\n\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\"\r\n                >\r\n                    <div className=\"margintopfix\"></div>\r\n                    \r\n                    <Grid container spacing={1}  className={classes.buttongroup}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Grid item xs={6} md={4}>\r\n                        \r\n                                { \r\n                                    parseInt(id) <= 1 ? \r\n\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        fullWidth\r\n                                        startIcon={<ChevronLeftIcon/>}\r\n                                        onClick={()=>{previousClick()}}\r\n                                        disabled>\r\n                                        N.º{parseInt(id) - 1}\r\n                                    </Button>\r\n                                    :\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        fullWidth\r\n                                        startIcon={<ChevronLeftIcon/>}\r\n                                        onClick={()=>{previousClick()}}\r\n                                    >\r\n                                        N.º{parseInt(id) - 1} {previousName}\r\n                                    </Button>\r\n                                }\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6} md={4}>                   \r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    fullWidth\r\n                                    endIcon={<ChevronRightIcon/>}\r\n                                    onClick={()=>{nextClick()}}\r\n                                >\r\n                                    N.º{parseInt(id) + 1} {nextName}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Card className={classes.cardshadowless}>\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n                                title={detailById.name}\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Card className={classes.root}>\r\n                            <CardContent>\r\n\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                    {detailById.name}\r\n                                </Typography>\r\n\r\n                                <div className=\"d-flex\">\r\n                                    <div>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            Height:  \r\n                                        </Typography>\r\n                                        <Chip label={detailById.height / 10 + \"m\"} color=\"default\" size=\"small\"/>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            Weight:\r\n                                        </Typography>\r\n                                        <Chip label={detailById.weight / 10 + \"Kg\"} color=\"default\" size=\"small\"/>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Types:\r\n                                    </Typography>\r\n                                        {   \r\n                                            detailById.types.length > 1 ?\r\n                                            detailById.types.map((el, index)=>{ \r\n                                                return <Chip key={index} label={el.type.name} color=\"secondary\" size=\"small\"/> })\r\n                                            :                                 \r\n                                            <Chip label={detailById.types[0].type.name} color=\"secondary\" size=\"small\"/>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex\">\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Abilities:\r\n                                    </Typography>\r\n                                        {   \r\n                                            detailById.abilities.length > 1 ?\r\n                                            detailById.abilities.map((el, index)=>{\r\n                                                return <Chip key={index} label={el.ability.name} color=\"primary\" size=\"small\" />})\r\n                                            :\r\n                                            <Chip label={detailById.abilities[0].ability.name} color=\"primary\" size=\"small\" />\r\n                                        }\r\n                                </div>\r\n                                <div>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Stats:\r\n                                    </Typography>\r\n                                        {\r\n                                        detailById.stats.map((el, index) =>{ \r\n                                        \r\n                                        return <div className=\"barprogress\" key={index}><p>{el.stat.name}:</p><BorderLinearProgress variant=\"determinate\" value={(el.base_stat*100)/150}/></div>\r\n                                        \r\n                                        })\r\n                                        }\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                \r\n                    <Grid item xs={12} className={classes.textalign}>\r\n                        <Link className=\"anchor-goback\" to=\"/react-pokemonapi/\">\r\n                            GO BACK\r\n                        </Link>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                : null  \r\n            }\r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;","import {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport pokemonReducer from \"./Ducks\";\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemonData: pokemonReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore(rootReducer, composeEnhancers( applyMiddleware(thunk)))\r\n    return store;\r\n}","import Banner from './components/Banner';\nimport Navbar from './components/Navbar';\nimport Detail from './components/Detail';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport generateStore from \"./redux/store\";\n\nfunction App() {\n\n  const store = generateStore()\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n\n          <Route path=\"/react-pokemonapi/detail/:id\">\n            <Detail />\n          </Route>\n\n          <Route path=\"/react-pokemonapi/\" exact>\n            <Banner />\n            <Navbar/>     \n            <ScrollUpButton />\n          </Route>\n          \n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './normalize.css';\nimport './style.css'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}