{"version":3,"sources":["img/img-pokemonlogo.png","components/Banner.jsx","components/CardResponse.jsx","components/Navbar.jsx","components/Detail.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","bannercontainer","background","overflow","Banner","classes","Grid","container","spacing","direction","justify","alignItems","alignContent","wrap","className","Box","color","clone","src","logo","alt","style","width","theme","root","maxWidth","minWidth","margin","media","height","backgroundSize","backgroundColor","textcapitalize","textTransform","backdrop","zIndex","drawer","textalign","textAlign","createMuiTheme","palette","primary","amber","CardResponse","inputSearch","useState","loading","setLoading","loadingSearch","setLoadingSearch","data","setData","page","setPage","open","setOpen","useEffect","getResponse","a","axios","get","response","results","console","log","getResponseSearch","refresh","window","location","reload","map","element","index","item","xs","sm","md","lg","xl","Card","CardActionArea","CardMedia","image","title","name","CardContent","Typography","variant","component","gutterBottom","CardActions","to","undefined","ThemeProvider","Button","size","onClick","id","my","endIcon","Backdrop","CircularProgress","flexGrow","marginBottom","menuButton","marginRight","display","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Navbar","setInputSearch","AppBar","Toolbar","noWrap","InputBase","type","placeholder","input","inputProps","onKeyDown","event","keyCode","target","value","toLowerCase","BorderLinearProgress","withStyles","marginTop","colorPrimary","grey","bar","LinearProgress","cardshadowless","boxShadow","buttongroup","flexDirection","Detail","history","useHistory","useParams","detailById","setDetailById","nextName","setNextName","previousName","setPreviousName","getResponseById","nextPagById","parseInt","getNamePaginationNext","previousPagById","getNamePaginationPrevious","previousClick","push","fullWidth","startIcon","disabled","Chip","label","weight","types","length","el","abilities","ability","stats","stat","base_stat","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5495cb66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img-pokemonlogo.380d8431.png\";","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport logo from \"../img/img-pokemonlogo.png\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    bannercontainer: {\r\n        background: '#313131',\r\n        // height: 250,\r\n        overflow: 'hidden',\r\n        // marginBottom: '50px !important'\r\n    },\r\n});\r\n\r\nconst Banner = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          wrap=\"nowrap\"\r\n          className={classes.bannercontainer}  \r\n        >\r\n            <Box color=\"text.primary\" clone>\r\n                <img src={logo} alt=\"logo pokemon\" style={{width: '40%'}}/>\r\n            </Box>\r\n        </Grid> \r\n     );\r\n}\r\n \r\nexport default Banner;","import React,{ useState, useEffect } from 'react'\r\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Grid, Card, CardActionArea, CardContent, CardMedia, Typography, Button,\r\nBox, CardActions, Backdrop, CircularProgress } from '@material-ui/core/';\r\nimport axios from 'axios';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport { amber } from '@material-ui/core/colors';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 300,\r\n        minWidth: 205,\r\n        margin: 'auto'\r\n    },\r\n    media: {\r\n        height: 205,\r\n        backgroundSize: 150,\r\n        backgroundColor: '#f2f2f2'\r\n    },\r\n    textcapitalize:{\r\n        textTransform: 'capitalize'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    textalign:{\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: amber\r\n    },\r\n  });\r\n\r\n\r\nconst CardResponse = (inputSearch) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [loadingSearch, setLoadingSearch] = useState(false);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [page, setPage] = useState(20);\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const nextPage = () =>{\r\n        setPage(page + 20)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const getResponse = async () =>{\r\n            try{\r\n                setOpen(true)\r\n                    \r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?offset=0&limit=${page}`)\r\n                   \r\n                setData(response.data.results)    \r\n            }\r\n            catch(error){\r\n                console.log(error);\r\n            }\r\n            finally{\r\n                setLoading(true)\r\n                setOpen(false)\r\n            }\r\n        }\r\n\r\n        const getResponseSearch = async () =>{\r\n            try{\r\n                setOpen(true)\r\n               \r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${inputSearch.inputSearch}`)\r\n                   \r\n                setData(response.data)\r\n            }\r\n            catch(error){\r\n                console.log(error);\r\n                setData([])\r\n            }\r\n            finally{\r\n                setLoadingSearch(true)\r\n                setOpen(false)\r\n            }\r\n        }\r\n\r\n        if(inputSearch.inputSearch !== ''){\r\n            setLoading(false)\r\n            getResponseSearch();\r\n        }else{\r\n            setLoadingSearch(false)\r\n            getResponse();\r\n        }\r\n\r\n    }, [page, inputSearch.inputSearch])\r\n\r\n    const refresh = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={1}>\r\n            {\r\n                loading === true ? data.map((element, index) =>( \r\n                    <Grid item xs={12} sm={4} md={3} lg={3} xl={2} key={index}>\r\n                        <Card className={classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`https://pokeres.bastionbot.org/images/pokemon/${ index + 1 }.png`}\r\n                                    title={element.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        N.º {index + 1}\r\n                                    </Typography>\r\n\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                        {element.name}\r\n                                    </Typography>\r\n                        \r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Typography>\r\n                                        <Link className=\"anchor\" to={`/react-pokemonapi/detail/${index + 1}`}>\r\n                                            GO TO\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </CardActions>\r\n\r\n                            </CardActionArea>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                ))\r\n                :\r\n                ''\r\n            }\r\n\r\n            {\r\n                loadingSearch === true ?\r\n                \r\n                    data.name === undefined  || data.name === null || data.name === ''?\r\n                    <>\r\n                    <Grid item xs={12} >\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Not found\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.textalign}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                onClick={() =>{refresh()}}\r\n                            >\r\n                                GO BACK\r\n                            </Button>\r\n                        </ThemeProvider>\r\n                    </Grid> \r\n                    </>\r\n                    :\r\n                    <>\r\n                    <Grid item xs={12} sm={4} md={3} lg={3} xl={2} >\r\n                        <Card className={classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`}\r\n                                    title={data.name}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        N.º {data.id}\r\n                                    </Typography>\r\n\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                        {data.name}\r\n                                    </Typography>\r\n                        \r\n                                </CardContent>\r\n\r\n                                <CardActions>\r\n                                    <Typography>\r\n                                        <Link className=\"anchor\" to={`/react-pokemonapi/detail/${data.id}`}>\r\n                                            GO TO\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </CardActions>\r\n\r\n                            </CardActionArea>\r\n                            \r\n                            {/* <CardActions>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                    GO TO\r\n                                </Button>\r\n                            </CardActions> */}\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.textalign}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                onClick={() =>{refresh()}}\r\n                            >\r\n                                GO BACK\r\n                            </Button>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                    </>\r\n        \r\n                :''\r\n            }                \r\n        </Grid>\r\n\r\n        {\r\n            loading === true && loadingSearch === false?\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                <Box  my={6}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            endIcon={<Visibility />}\r\n                            onClick={() =>{nextPage()}}\r\n                        >\r\n                            SEE MORE\r\n                        </Button>\r\n                    </ThemeProvider>\r\n                </Box>\r\n            </Grid>\r\n            :\r\n            ''    \r\n        }          \r\n        <Backdrop className={classes.backdrop} open={open}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardResponse;\r\n","import React,{ useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardResponse from './CardResponse';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 48\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [inputSearch, setInputSearch] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n      if (event.keyCode === 13) {\r\n        setInputSearch(event.target.value.toLowerCase())\r\n        // console.log(event.target.value.toLowerCase())\r\n      }\r\n    }\r\n   \r\n    return (\r\n      <> \r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: '#ffc107' }}>\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Find pokemon by number or name\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              type=\"text\"\r\n              placeholder=\"Push enter to search\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onKeyDown={handleInputChange}\r\n              \r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    <CardResponse inputSearch={inputSearch}/>\r\n    </>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, CardMedia, Typography, LinearProgress, Button, Backdrop, CircularProgress } from '@material-ui/core/';\r\nimport { makeStyles, withStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles/';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { amber } from '@material-ui/core/colors';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n      height: 10,\r\n      borderRadius: 5,\r\n      width: \"70%\",\r\n      marginTop: 11.2\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n      borderRadius: 5,\r\n      backgroundColor: '#1a90ff',\r\n    },\r\n  }))(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#302d31',\r\n        color: '#cecece'\r\n    },\r\n    media: {\r\n        height: 245,\r\n        backgroundSize: 240,\r\n        backgroundColor: '#696969'\r\n    },\r\n    cardshadowless:{\r\n        boxShadow: 'none'\r\n    },\r\n    textcapitalize: {\r\n        textTransform: 'capitalize'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    buttongroup:{\r\n        // marginTop: '100px !important',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    textalign:{\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: amber\r\n    },\r\n  });\r\n\r\nconst Detail = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let history = useHistory();\r\n\r\n    const { id } = useParams()\r\n\r\n    const [detailById, setDetailById] = useState([])\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [nextName, setNextName] = useState('');\r\n\r\n    const [previousName, setPreviousName] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const getResponseById = async () => {\r\n            try {\r\n                setOpen(true)\r\n\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n                // console.log(response.data)\r\n                setDetailById(response.data)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }finally{\r\n                setLoading(true)\r\n                setOpen(false)\r\n            }\r\n        }\r\n        getResponseById()\r\n\r\n        const getNamePaginationNext = async () =>{\r\n\r\n            let nextPagById = parseInt(id) + 1\r\n\r\n            try {\r\n                setOpen(true)\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${nextPagById}`)\r\n                setNextName(response.data.name)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }finally{\r\n                setOpen(false)\r\n            }\r\n        }\r\n        getNamePaginationNext()\r\n\r\n        const getNamePaginationPrevious = async() =>{\r\n\r\n            let previousPagById = parseInt(id) - 1\r\n\r\n            if(previousPagById !== 0){\r\n\r\n                try {\r\n                    setOpen(true)\r\n                    const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${previousPagById}`)\r\n                    setPreviousName(response.data.name)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }finally{\r\n                    setOpen(false)\r\n                }\r\n            }\r\n        }\r\n        getNamePaginationPrevious()\r\n\r\n    }, [id])\r\n\r\n    const nextClick = () => {\r\n        history.push(`/react-pokemonapi/detail/${parseInt(id) + 1}`);\r\n    }\r\n\r\n    const previousClick = () => {\r\n        history.push(`/react-pokemonapi/detail/${parseInt(id) - 1}`);\r\n    }\r\n\r\n    return (\r\n        <>{loading === true ?\r\n\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                // wrap=\"nowrap\"\r\n            >\r\n                <div className=\"margintopfix\"></div>\r\n\r\n                <Grid container spacing={1}  className={classes.buttongroup}>\r\n                    <ThemeProvider theme={theme}>\r\n                    <Grid item xs={6} md={4}>\r\n                    \r\n                    { parseInt(id) <= 1 ? \r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            startIcon={<ChevronLeftIcon/>}\r\n                            onClick={()=>{previousClick()}}\r\n                            disabled>\r\n                            N.º{parseInt(id) - 1}\r\n                        </Button>\r\n                        :\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            startIcon={<ChevronLeftIcon/>}\r\n                            onClick={()=>{previousClick()}}\r\n                        >\r\n                            N.º{parseInt(id) - 1} {previousName}\r\n                        </Button>\r\n                    }\r\n\r\n                    </Grid>\r\n                        <Grid item xs={6} md={4}>\r\n                        \r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            endIcon={<ChevronRightIcon/>}\r\n                            onClick={()=>{nextClick()}}\r\n                        >\r\n                            N.º{parseInt(id) + 1} {nextName}\r\n                        </Button>\r\n                        \r\n                        </Grid>\r\n                    </ThemeProvider>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Card className={classes.cardshadowless}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n                            title={detailById.name}\r\n                        />\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <Card className={classes.root}>\r\n                        <CardContent>\r\n\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.textcapitalize}>\r\n                                {detailById.name}\r\n                            </Typography>\r\n\r\n                            <div className=\"d-flex\">\r\n                                <div>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Height:  \r\n                                    </Typography>\r\n                                    <Chip label={detailById.height / 10 + \"m\"} color=\"default\" size=\"small\"/>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        Weight:\r\n                                    </Typography>\r\n                                    <Chip label={detailById.weight / 10 + \"Kg\"} color=\"default\" size=\"small\"/>\r\n                                </div>\r\n\r\n                                <div>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Types:\r\n                                </Typography>\r\n                                    {   \r\n                                        detailById.types.length > 1 ?\r\n                                        detailById.types.map((el, index)=>{ \r\n                                            return <Chip key={index} label={el.type.name} color=\"secondary\" size=\"small\"/> })\r\n                                        :                                 \r\n                                        <Chip label={detailById.types[0].type.name} color=\"secondary\" size=\"small\"/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\">\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                Abilities:\r\n                            </Typography>\r\n                                {   \r\n                                    detailById.abilities.length > 1 ?\r\n                                    detailById.abilities.map((el, index)=>{\r\n                                        return <Chip key={index} label={el.ability.name} color=\"primary\" size=\"small\" />})\r\n                                    :\r\n                                    <Chip label={detailById.abilities[0].ability.name} color=\"primary\" size=\"small\" />\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                Stats:\r\n                            </Typography>\r\n                                {\r\n                                detailById.stats.map((el, index) =>{ \r\n                                \r\n                                return <div className=\"barprogress\" key={index}><p>{el.stat.name}:</p><BorderLinearProgress variant=\"determinate\" value={(el.base_stat*100)/150}/></div>\r\n                                \r\n                                })\r\n                                }\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} className={classes.textalign}>\r\n                    <Link className=\"anchor-goback\" to=\"/react-pokemonapi/\">\r\n                        GO BACK\r\n                    </Link>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        : null  }\r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;","\nimport Banner from './components/Banner';\nimport Navbar from './components/Navbar';\nimport Detail from './components/Detail';\nimport { TinyButton as ScrollUpButton } from \"react-scroll-up-button\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n\n          <Route path=\"/react-pokemonapi/detail/:id\">\n            <Detail />\n          </Route>\n\n          <Route path=\"/react-pokemonapi/\" exact>\n            <Banner />\n            <Navbar/>     \n            {/* <CardResponse inputSearch={inputSearch}/>  */}\n            <ScrollUpButton />\n          </Route>\n          \n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './normalize.css';\nimport './style.css'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}